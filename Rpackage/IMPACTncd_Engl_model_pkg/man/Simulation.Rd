% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Simulation_class.R
\name{Simulation}
\alias{Simulation}
\title{R6 Class representing a simulation environment}
\description{
A simulation environment.
}
\details{
To be completed...
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{design}}{A Design object with .}

\item{\code{diseases}}{A list of Disease objects.}

\item{\code{scenarios}}{A list of scenario objects.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Simulation-new}{\code{Simulation$new()}}
\item \href{#method-Simulation-run}{\code{Simulation$run()}}
\item \href{#method-Simulation-export_summaries}{\code{Simulation$export_summaries()}}
\item \href{#method-Simulation-get_causal_structure}{\code{Simulation$get_causal_structure()}}
\item \href{#method-Simulation-update_design}{\code{Simulation$update_design()}}
\item \href{#method-Simulation-del_outputs}{\code{Simulation$del_outputs()}}
\item \href{#method-Simulation-del_logs}{\code{Simulation$del_logs()}}
\item \href{#method-Simulation-get_esp}{\code{Simulation$get_esp()}}
\item \href{#method-Simulation-get_mm_weights}{\code{Simulation$get_mm_weights()}}
\item \href{#method-Simulation-print}{\code{Simulation$print()}}
\item \href{#method-Simulation-clone}{\code{Simulation$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-new"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-new}{}}}
\subsection{Method \code{new()}}{
Create a new simulation object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$new(sim_prm)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sim_prm}}{Either a path to a yaml file or a Design object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `Simulation` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-run"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-run}{}}}
\subsection{Method \code{run()}}{
Runs a simulation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$run(mc, multicore = TRUE, scenario_nam)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mc}}{A positive sequential integer vector with the Monte Carlo
iterations of synthetic population to simulate.}

\item{\code{multicore}}{If TRUE run the simulation in parallel.}

\item{\code{scenario_nam}}{A string for the scenario name (i.e. sc1)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The invisible self for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-export_summaries"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-export_summaries}{}}}
\subsection{Method \code{export_summaries()}}{
Process the lifecourse files
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$export_summaries(multicore = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{multicore}}{If TRUE run the simulation in parallel.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The invisible self for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-get_causal_structure"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-get_causal_structure}{}}}
\subsection{Method \code{get_causal_structure()}}{
Returns the causality matrix and optionally plots the
causality structure.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$get_causal_structure(processed = TRUE, print_plot = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{processed}}{If `TRUE` generates the causality matrix from the graph.}

\item{\code{print_plot}}{If `TRUE` prints the causal structure graph.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The processed causality matrix if `processed = TRUE` or the graph
  otherwise.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-update_design"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-update_design}{}}}
\subsection{Method \code{update_design()}}{
Updates the Design object that is stored in the Simulation object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$update_design(new_design)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_design}}{A design object with the simulation parameters.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The invisible self for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-del_outputs"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-del_outputs}{}}}
\subsection{Method \code{del_outputs()}}{
Delete all output files.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$del_outputs()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The invisible self for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-del_logs"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-del_logs}{}}}
\subsection{Method \code{del_logs()}}{
Delete log files.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$del_logs()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The invisible self for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-get_esp"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-get_esp}{}}}
\subsection{Method \code{get_esp()}}{
Get the European Standardised Population 2013 by sex and dimd.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$get_esp()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data.table with the European Standardised Population 2013.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-get_mm_weights"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-get_mm_weights}{}}}
\subsection{Method \code{get_mm_weights()}}{
Get the disease multimorbidity weifgts (i.e. Cambridge Morbidity Score weights).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$get_mm_weights()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A named vector with disease weights.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-print"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-print}{}}}
\subsection{Method \code{print()}}{
Prints the simulation object metadata.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The invisible `SynthPop` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Simulation-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Simulation-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Simulation$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
